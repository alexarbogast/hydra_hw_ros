<?xml version="1.0"?>
<launch>
  <!-- This launch file brings up the za6 controller -->
  <arg name="arm_id" default="za" doc="Name of the robot launch"/>
  
  <!-- HAL Configuration -->
  <arg name="hal_debug_output" default="false" doc="Should HAL output debug messages to console?"/>
  <arg name="hal_debug_level"  default="1"     doc="Set HAL debug level, 0-5"/>
  <arg name="sim"              default="$(eval optenv('HARDWARE_MODE', 'sim') == 'sim')"
       doc="Should we connect to a simulated or real robot?"/>

  <!-- - Drive type, if not sim -->
  <arg name="robot_drive_type" default="$(eval optenv('ROBOT_DRIVE_TYPE', ''))"/>

  <!-- EtherCAT config file -->
  <arg name="lcec_config_file" default="ethercat-za6-$(arg robot_drive_type).xml"/>
  
  <rosparam file="$(find za_hardware)/config/io_config.yaml"/>
  <rosparam file="$(find za_hardware)/config/hal_hw_interface.yaml"/>
  <rosparam file="$(find za_hardware)/config/hal_io.yaml"/>
  <rosparam file="$(find za_hardware)/config/za_hardware.yaml" subst_value="true"/>
  <rosparam file="$(find za_bringup)/config/hardware_settings.yaml" subst_value="true"/>
  <param name="sim_mode" value="$(arg sim)"/>

  <!-- RT CPUs and cgroup name are set in entrypoint and passed
       through docker-dev.sh -->
  <param name="hal_mgr/rt_cpus" value="$(optenv RT_CPUS)"/>
  <param name="hal_mgr/rt_cgname" value="$(optenv RT_CGNAME)"/>
  <param name="hal_mgr/hal_file_dir" value="$(find za_hardware)/halfiles"/>
  <param name="hal_mgr/lcec_config_file" value="$(arg lcec_config_file)"/>

  <!-- EtherCAT drive configuration params -->
  <rosparam
      file="$(find za_hardware)/config/ethercat_drive_params_$(arg robot_drive_type).yaml"
      unless="$(arg sim)"/>

    <!-- parameters being used by hal_402_drive_mgr -->
  <rosparam
      file="$(find za_hardware)/config/hal_402_device_mgr_$(arg robot_drive_type).yaml"
      unless="$(arg sim)"/>
  <rosparam
      file="$(find za_hardware)/config/hal_402_device_mgr_sim.yaml"
      if="$(arg sim)"/>
  <rosparam
      file="$(find za_hardware)/config/fault_codes_$(arg robot_drive_type).yaml"
      unless="$(arg sim)"/>

  <!-- Set the HAL debug variables -->
  <env name="DEBUG" value="$(arg hal_debug_level)"/>
  <env name="SYSLOG_TO_STDERR"     if="$(arg hal_debug_output)" value="1"/>
  <env name="SYSLOG_TO_STDERR" unless="$(arg hal_debug_output)" value=""/>

  <!-- HAL manager node:  launch realtime environment -->
  <node name="hal_mgr"
        pkg="hal_hw_interface"
        type="hal_mgr"
        output="screen"
        required="true"/>

  <!-- <include file="$(find hal_hw_interface)/launch/hal_hw_interface.launch">
    <arg name="hal_debug_output" value="$(arg hal_debug_output)"/>
    <arg name="hal_debug_level" value="$(arg hal_debug_level)"/>
  </include> -->

  <!-- For Virtual PathPilot run we are presuming simple single standing Dcoker environment-->
  <!-- As such there is no DBus present and we cannot use Avahi announcement even in loopback -->
  <!-- <node
    name="sim_ui"
    pkg="za_hardware"
    type="run_sim_ui.py"
    if="$(eval optenv('VIRTUAL_PATHPILOT', '1') != '1' and arg('sim'))"
  /> -->
</launch>